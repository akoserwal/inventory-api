syntax = "proto3";

package api.kessel.inventory.v1beta1;

import "google/api/annotations.proto";

import public "kessel/inventory/v1beta1/k8s_cluster.proto";

option go_package = "api/kessel/inventory/v1beta1;v1beta1";
option java_multiple_files = true;
option java_package = "org.project_kessel.api.inventory.v1beta1";

message CreateK8sClusterRequest {
  // The k8s cluster to create in Kessel Asset Inventory
  K8SCluster k8sCluster = 1;
}

message CreateK8sClusterResponse {
  // The K8s cluster created in Kessel Asset Inventory
  K8SCluster k8sCluster = 1;
}

message UpdateK8sClusterRequest {
  // The {resource} format
  // \"<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.resourceId_alias>\".
  string resource = 1;
  // The k8s clsuter to update
  K8SCluster k8sCluster = 2;
}

message UpdateK8sClusterResponse {}

message DeleteK8sClusterRequest {
  // The {resource} format
  // \"<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.resourceId_alias>\".
  string resource = 1;
}

message DeleteK8sClusterResponse {}

service K8sClustersService {
  rpc CreateK8sCluster(CreateK8sClusterRequest) returns (CreateK8sClusterResponse) {
    option (google.api.http) = {
      post : "/api/inventory/v1beta1/k8s_clusters"
      body : "k8sCluster"
    };
  };

  rpc UpdateK8sCluster(UpdateK8sClusterRequest) returns (UpdateK8sClusterResponse) {
    option (google.api.http) = {
      put : "/api/inventory/v1beta1/k8s_clusters/{resource}"
      body : "k8sCluster"
    };
  };

  rpc DeleteK8sCluster(DeleteK8sClusterRequest) returns (DeleteK8sClusterResponse) {
    option (google.api.http) = {
      delete : "/api/inventory/v1beta1/k8s_clusters/{resource}"
    };
  };
}
