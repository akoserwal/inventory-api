syntax = "proto3";

package api.kessel.inventory.v1beta1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

import public "kessel/inventory/v1beta1/rhel_host.proto";

option go_package = "api/kessel/inventory/v1beta1;v1beta1";
option java_multiple_files = true;
option java_package = "org.project_kessel.api.inventory.v1beta1";

message CreateRHELHostRequest {
  // The RHEL Host to create in Kessel Asset Inventory
  RhelHost host = 1 [
    (google.api.field_behavior) = REQUIRED
  ];
}

message CreateRHELHostResponse {
  // The RHEL Host created in Kessel Asset Inventory
  RhelHost host = 1 [
    (google.api.field_behavior) = REQUIRED
  ];
}

message UpdateRHELHostRequest {
  // A resource instance using the format:
  // \"<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.resourceId_alias>\"
  string resource = 1 [
    (google.api.field_behavior) = REQUIRED
  ];
  // The RHEL host to update
  RhelHost host = 2 [
    (google.api.field_behavior) = REQUIRED
  ];
}

message UpdateRHELHostResponse {}

message DeleteRHELHostRequest {
  // A resource instance using the format:
  // \"<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.resourceId_alias>\"
  string resource = 1 [
    (google.api.field_behavior) = REQUIRED
  ];
}

message DeleteRHELHostResponse {}

service HostsService {
  rpc CreateRHELHost(CreateRHELHostRequest) returns (CreateRHELHostResponse) {
    option (google.api.http) = {
      post : "/api/inventory/v1beta1/hosts"
      body : "host"
    };
  };

  rpc UpdateRHELHost(UpdateRHELHostRequest) returns (UpdateRHELHostResponse) {
    option (google.api.http) = {
      put : "/api/inventory/v1beta1/hosts/{resource}"
      body : "host"
    };
  };

  rpc DeleteRHELHost(DeleteRHELHostRequest) returns (DeleteRHELHostResponse) {
    option (google.api.http) = {
      delete : "/api/inventory/v1beta1/hosts/{resource}"
    };
  };
}
