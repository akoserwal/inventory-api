# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Kessel Asset Inventory API
    version: 0.10.1
paths:
    /api/inventory/v1/livez:
        get:
            tags:
                - InventoryHealthService
            operationId: InventoryHealthService_GetLivez
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLivezResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/inventory/v1/readyz:
        get:
            tags:
                - InventoryHealthService
            operationId: InventoryHealthService_GetReadyz
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetReadyzResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/inventory/v1beta1/hosts:
        post:
            tags:
                - HostsService
            operationId: HostsService_CreateRHELHost
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RHELHost'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRHELHostResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/inventory/v1beta1/hosts/{resource}:
        put:
            tags:
                - HostsService
            operationId: HostsService_UpdateRHELHost
            parameters:
                - name: resource
                  in: path
                  description: |-
                    A resource instance using the format:
                     \"<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.resourceId_alias>\"
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RHELHost'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRHELHostResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - HostsService
            operationId: HostsService_DeleteRHELHost
            parameters:
                - name: resource
                  in: path
                  description: |-
                    A resource instance using the format:
                     \"<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.resourceId_alias>\"
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRHELHostResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/inventory/v1beta1/k8s_clusters:
        post:
            tags:
                - K8SClustersService
            operationId: K8SClustersService_CreateK8SCluster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/K8sCluster'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateK8sClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/inventory/v1beta1/k8s_clusters/{resource}:
        put:
            tags:
                - K8SClustersService
            operationId: K8SClustersService_UpdateK8SCluster
            parameters:
                - name: resource
                  in: path
                  description: |-
                    The {resource} format
                     \"<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.resourceId_alias>\".
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/K8sCluster'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateK8sClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - K8SClustersService
            operationId: K8SClustersService_DeleteK8SCluster
            parameters:
                - name: resource
                  in: path
                  description: |-
                    The {resource} format
                     \"<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.resourceId_alias>\".
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteK8sClusterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/inventory/v1beta1/notificationsintegrations:
        post:
            tags:
                - NotificationsIntegrationsService
            operationId: NotificationsIntegrationsService_CreateNotificationsIntegration
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NotificationsIntegration'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateNotificationsIntegrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/inventory/v1beta1/notificationsintegrations/{resource}:
        put:
            tags:
                - NotificationsIntegrationsService
            operationId: NotificationsIntegrationsService_UpdateNotificationsIntegration
            parameters:
                - name: resource
                  in: path
                  description: |-
                    A resource instance using the format:
                     \"<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.resourceId_alias>\"
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NotificationsIntegration'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateNotificationsIntegrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - NotificationsIntegrationsService
            operationId: NotificationsIntegrationsService_DeleteNotificationsIntegration
            parameters:
                - name: resource
                  in: path
                  description: |-
                    A resource instance using the format:
                     \"<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.resourceId_alias>\"
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteNotificationsIntegrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/inventory/v1beta1/policies:
        post:
            tags:
                - PoliciesService
            operationId: PoliciesService_CreatePolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Policy'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/inventory/v1beta1/policies/{resource}:
        put:
            tags:
                - PoliciesService
            operationId: PoliciesService_UpdatePolicy
            parameters:
                - name: resource
                  in: path
                  description: |-
                    The {resource} format
                     \"<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.resourceId_alias>\".
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Policy'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdatePolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - PoliciesService
            operationId: PoliciesService_DeletePolicy
            parameters:
                - name: resource
                  in: path
                  description: |-
                    The {resource} format
                     \"<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.resourceId_alias>\".
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeletePolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/inventory/v1beta1/policy_relationships:
        put:
            tags:
                - RelationshipsService
            operationId: RelationshipsService_UpdateResourceRelationshipByURNHs
            parameters:
                - name: resources.subjectResource
                  in: query
                  schema:
                    type: string
                - name: resources.objectResource
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PolicyRelationship'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateResourceRelationshipByURNResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - RelationshipsService
            operationId: RelationshipsService_CreatePolicyRelationship
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PolicyRelationship'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePolicyRelationshipResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - RelationshipsService
            operationId: RelationshipsService_DeleteResourceRelationshipByURN
            parameters:
                - name: resources.subjectResource
                  in: query
                  schema:
                    type: string
                - name: resources.objectResource
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteResourceRelationshipByURNResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CreateK8sClusterResponse:
            type: object
            properties:
                k8sCluster:
                    allOf:
                        - $ref: '#/components/schemas/K8sCluster'
                    description: The K8s cluster created in Kessel Asset Inventory
        CreateNotificationsIntegrationResponse:
            required:
                - integration
            type: object
            properties:
                integration:
                    allOf:
                        - $ref: '#/components/schemas/NotificationsIntegration'
                    description: The NotificationsIntegration created in Kessel Asset Inventory
        CreatePolicyRelationshipResponse:
            type: object
            properties:
                policyRelationship:
                    allOf:
                        - $ref: '#/components/schemas/PolicyRelationship'
                    description: The resource relationship created in Kessel Asset Inventory
        CreatePolicyResponse:
            type: object
            properties:
                policy:
                    allOf:
                        - $ref: '#/components/schemas/Policy'
                    description: The policy created in Kessel Asset Inventory
        CreateRHELHostResponse:
            required:
                - host
            type: object
            properties:
                host:
                    allOf:
                        - $ref: '#/components/schemas/RHELHost'
                    description: The RHEL Host created in Kessel Asset Inventory
        DeleteK8sClusterResponse:
            type: object
            properties: {}
        DeleteNotificationsIntegrationResponse:
            type: object
            properties: {}
        DeletePolicyResponse:
            type: object
            properties: {}
        DeleteRHELHostResponse:
            type: object
            properties: {}
        DeleteResourceRelationshipByURNResponse:
            type: object
            properties: {}
        GetLivezResponse:
            type: object
            properties:
                status:
                    type: string
                code:
                    type: integer
                    format: uint32
        GetReadyzResponse:
            type: object
            properties:
                status:
                    type: string
                code:
                    type: integer
                    format: uint32
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        K8sCluster:
            required:
                - metadata
            type: object
            properties:
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/Metadata'
                    description: Metadata about this resource
                reporterData:
                    writeOnly: true
                    allOf:
                        - $ref: '#/components/schemas/ReporterData'
                    description: Write only reporter specific data
                reporters:
                    readOnly: true
                    type: array
                    items:
                        $ref: '#/components/schemas/ReporterData'
                    description: |-
                        The entities that registered this item in the Kessel Asset Inventory. The
                         same resource may be registered by multiple reporters.
                data:
                    $ref: '#/components/schemas/K8sClusterDetail'
        K8sClusterDetail:
            type: object
            properties:
                externalClusterId:
                    type: string
                    description: The OCP cluster ID or ARN etc for *KS
                clusterStatus:
                    type: integer
                    format: enum
                kubeVersion:
                    type: string
                    description: The version of kubernetes
                kubeVendor:
                    type: integer
                    format: enum
                vendorVersion:
                    type: string
                    description: The version of the productized kubernetes distribution
                cloudPlatform:
                    type: integer
                    format: enum
                Nodes:
                    type: array
                    items:
                        $ref: '#/components/schemas/K8sClusterDetailNodesInner'
        K8sClusterDetailNodesInner:
            type: object
            properties:
                name:
                    type: string
                    description: The name of the node (this can contain private info)
                cpu:
                    type: string
                    description: CPU Capacity of the node defined in CPU units, e.g. \"0.5\"
                memory:
                    type: string
                    description: Memory Capacity of the node defined as MiB, e.g. \"50Mi\"
                labels:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    description: |-
                        Map of string keys and string values that can be used to organize and
                         categorize (scope and select) resources
        Metadata:
            type: object
            properties:
                id:
                    readOnly: true
                    type: string
                    description: Kessel Asset Inventory generated identifier.
                resourceType:
                    type: string
                    description: The type of the Resource
                firstReported:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was first reported.
                    format: date-time
                lastReported:
                    readOnly: true
                    type: string
                    description: Date and time when the inventory item was last updated.
                    format: date-time
                firstReportedBy:
                    readOnly: true
                    type: string
                    description: Identifier of the reporter that first reported this item.
                lastReportedBy:
                    readOnly: true
                    type: string
                    description: Identifier of the reporter that last reported on this item.
                workspace:
                    type: string
                    description: |-
                        The workspace in which this resource is a member for access control.  A
                         resource can only be a member of one workspace.
                tags:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceTag'
        NotificationsIntegration:
            required:
                - metadata
            type: object
            properties:
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/Metadata'
                    description: Metadata about this resource
                reporterData:
                    writeOnly: true
                    allOf:
                        - $ref: '#/components/schemas/ReporterData'
                    description: Write only reporter specific data
                reporters:
                    readOnly: true
                    type: array
                    items:
                        $ref: '#/components/schemas/ReporterData'
                    description: |-
                        The entities that registered this item in the Kessel Asset Inventory. The
                         same resource may be registered by multiple reporters.
        Policy:
            required:
                - metadata
            type: object
            properties:
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/Metadata'
                    description: Metadata about this resource
                reporterData:
                    writeOnly: true
                    allOf:
                        - $ref: '#/components/schemas/ReporterData'
                    description: Write only reporter specific data
                reporters:
                    readOnly: true
                    type: array
                    items:
                        $ref: '#/components/schemas/ReporterData'
                    description: |-
                        The entities that registered this item in the Kessel Asset Inventory. The
                         same resource may be registered by multiple reporters.
                data:
                    $ref: '#/components/schemas/PolicyDetail'
        PolicyDetail:
            type: object
            properties:
                disabled:
                    type: boolean
                    description: Defines if the policy is currently enabled or disabled across all targets
                severity:
                    type: integer
                    format: enum
        PolicyRelationship:
            type: object
            properties:
                relationshipType:
                    type: string
                    description: The type of Resource relationship
                policyId:
                    type: string
                    description: |-
                        The resource ID assigned to the resource by Kessel Asset Inventory. A
                         reporter alias may also be used as a resource ID using the format:
                         \"hcrn:<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.resourceId_alias>\"
                clusterId:
                    type: string
                    description: |-
                        The resource ID assigned to the resource by Kessel Asset Inventory. A
                         reporter alias may also be used as a resource ID using the format:
                         \"hcrn:<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.resourceId_alias>\"
                status:
                    type: integer
                    format: enum
        RHELHost:
            required:
                - metadata
            type: object
            properties:
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/Metadata'
                    description: Metadata about this resource
                reporterData:
                    writeOnly: true
                    allOf:
                        - $ref: '#/components/schemas/ReporterData'
                    description: Write only reporter specific data
                reporters:
                    readOnly: true
                    type: array
                    items:
                        $ref: '#/components/schemas/ReporterData'
                    description: |-
                        The entities that registered this item in the Kessel Asset Inventory. The
                         same resource may be registered by multiple reporters.
        ReporterData:
            type: object
            properties:
                reporterType:
                    type: integer
                    format: enum
                reporterInstanceId:
                    type: string
                    description: |-
                        The ID of the instance of the reporter. This is derived from the
                         authentication mechanism, i.e. authentication token.
                consoleHref:
                    type: string
                    description: |-
                        The URL for this resource in the reporter's management UI console. For
                         example this would be the cluster URL in the HCC Console for an OCM
                         reported cluster.
                apiHref:
                    type: string
                    description: Reporter specific API link to the resource.
                localResourceId:
                    type: string
                    description: |-
                        The ID assigned to this resource by the reporter, for example OCM cluster
                         ID, HBI's host id, or ACM managed cluster name etc.
                reporterVersion:
                    type: string
                    description: version of the reporter
        ResourceTag:
            type: object
            properties:
                key:
                    type: string
                value:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateK8sClusterResponse:
            type: object
            properties: {}
        UpdateNotificationsIntegrationResponse:
            type: object
            properties: {}
        UpdatePolicyResponse:
            type: object
            properties: {}
        UpdateRHELHostResponse:
            type: object
            properties: {}
        UpdateResourceRelationshipByURNResponse:
            type: object
            properties: {}
tags:
    - name: HostsService
    - name: InventoryHealthService
    - name: K8SClustersService
    - name: NotificationsIntegrationsService
    - name: PoliciesService
    - name: RelationshipsService
